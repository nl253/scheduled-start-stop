AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Parameters:
  CronSpec:
    Type: String
    Default: 'cron(0 * * * ? *)'
  FuncRuntime:
    Type: String
    Default: nodejs12.x
  FuncRoleName:
    Type: String
    Default: start-stop-ec2
  FuncTimeout:
    Type: Number
    Default: 30
  FuncMemory:
    MinValue: 128
    Type: Number
    Default: 128
  FuncTracing:
    Type: String
    Default: Active
Resources:
  StartStopLinuxLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - !Sub arn:aws:iam::${AWS::AccountId}:policy/KMSReadOnlyPolicy
      Tags:
        - { Key: personal-vm, Value: '1' }
  StartStopLinuxLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: !Ref FuncRuntime
      CodeUri: .
      Description: 'Lambda function that starts or stops the linux VM based on time.'
      MemorySize: !Ref FuncMemory
      Timeout: !Ref FuncTimeout
      Role: !GetAtt StartStopLinuxLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Ref CronSpec
      Tags:
        personal-vm: '1'
      Environment:
        Variables:
          Dummy: '1'
      Tracing: !Ref FuncTracing
